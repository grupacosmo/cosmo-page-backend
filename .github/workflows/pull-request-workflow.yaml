name: Pull Request Workflow

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  project-build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        java-version: [21]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
      - name: Set JDK ${{ matrix.java-version }} from jdk.java.net
        uses: oracle-actions/setup-java@v1
        id: download-jdk
        with:
          website: jdk.java.net
          release: ${{ matrix.java-version }}
        if: ${{ matrix.java-version != 21 }}
      - name: Set JDK ${{ matrix.java-version }} from Zulu
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}
        if: ${{ matrix.java-version == 21 }}
      - name: JDK Version
        run: java --version
      - name: Enable Maven Cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Maven
        run: mvn clean install
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=$HOME/.m2/repository -Xmx1g"
  docker-build:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - project-build
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into the Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: cosmopk/cosmo-page-backend:latest
  deploy:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - docker-build
    steps:
      - name: print out example job
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          port: 22
          command_timeout: 30m
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull cosmopk/cosmo-page-backend:latest

            if [ "\$(docker ps -qa -f name=\$CONTAINER_NAME)" ]; then
              if [ "\$(docker ps -q -f name=\$CONTAINER_NAME)" ]; then
                echo "Container is running -> stopping it..."
                docker stop \$CONTAINER_NAME;
              fi
            fi
            
            docker run -d --rm -p 8000:8000 --name cosmo-page-backend cosmopk/cosmo-page-backend:latest
            
            exit
